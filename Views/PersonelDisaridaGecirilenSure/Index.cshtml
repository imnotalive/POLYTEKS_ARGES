@*@using GridMvc.Html
    @model IEnumerable<POLYTEKS_ARGE.Models.ARGE_PersonelDisaridaGecirilenSure>*@
@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<POLYTEKS_ARGE.Models.ARGE_PersonelDisaridaGecirilenSure>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (TempData["AlertMessage"] != null)
{
    <div class="alert alert-success">
        <strong>BAŞARILI!</strong> @TempData["AlertMessage"]
    </div>

}
@if (TempData["EditAlertMessage"] != null)
{
    <div class="alert alert-primary">
        <strong>BAŞARILI!</strong> @TempData["EditAlertMessage"]
    </div>

}
@if (TempData["DeleteAlertMessage"] != null)
{
    <div class="alert alert-danger">
        <strong>BAŞARILI!</strong> @TempData["DeleteAlertMessage"]
    </div>

}
<div class="col-md-12">
    <div class="card" style="background-color:whitesmoke">
        <div class="card-header">
            <center><h2><b>AR-GE PERSONELİ DIŞARIDA GEÇİRİLEN SÜRELER</b></h2></center>
            <link href="~/Content/Gridmvc.css" rel="stylesheet" />
            <script src="~/Scripts/jquery-3.6.0.min.js"></script>
            <script src="~/Scripts/gridmvc.min.js"></script>
            <script type="text/javascript"></script>
            <script src="~/Scripts/bootstrap-datepicker.js"></script>
            <script src="~/Scripts/locales/bootstrap-datepicker.tr.min.js"></script>
            <script src="~/Scripts/bootstrap.min.js"></script>
            <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
            <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css">
            <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js"></script>
            <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"></script>
            <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
            <p>
                @Html.ActionLink("YENİ OLUŞTUR", "Create", "PersonelDisaridaGecirilenSure", new { @class = "btn btn-info btn-block" })
            </p>
            <p>
                @Html.ActionLink("RAPORLAMA", "PersonelRapor", "PersonelDisaridaGecirilenSure", new { @class = "btn btn-danger btn-block" })
            </p>



            @*<div style="height: 500px; overflow: auto;">
            <div class="row-cols-sm-1">
                @Html.Grid(Model).EmptyText("Gösterilecek bir şey bulunamadı").Columns(Columns =>
           {
               Columns.Add(c => c.ARGE_Proje.ProjeAdi).Titled("PROJE ADI").Sortable(true).Filterable(true);
               Columns.Add(c => c.ARGE_Personel.AdSoyad).Titled("PERSONEL").Sortable(true).Filterable(true);
               Columns.Add(c => c.CikisTarih).Titled("PERSONEL ÇIKIŞ TARİHİ").Format("{0:dd.MM.yyyy}").Sortable(true).Filterable(true);
               Columns.Add(c => c.Yer).Titled("YER").Sortable(true).Filterable(true);

               Columns.Add(c => c.DisGorevAdi).Titled("DIŞ GÖREV ADI").Sortable(true).Filterable(true);





               Columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(1)
            .RenderValueAs(o => Html.ActionLink("DÜZENLE", "Edit", new { id = o.ID }, new { @class = "btn btn-primary btn-xl" })).Encoded(false).Filterable(false).Sortable(false).Titled("DÜZENLE");
               Columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(1)
        .RenderValueAs(o => Html.ActionLink("DETAYLAR", "Details", new { id = o.ID }, new { @class = "btn btn-info btn-xl" })).Encoded(false).Filterable(false).Sortable(false).Titled("DETAYLAR");
               Columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(1)
              .RenderValueAs(o => Html.ActionLink("SİL", "Delete", new { id = o.ID }, new { @class = "btn btn-danger btn-xl" })).Encoded(false).Filterable(false).Sortable(false).Titled("SİL");


           }
            ).WithPaging(50).SetLanguage("tr").Sortable(true).Filterable(true).WithGridItemsCount("Toplam Dışarıdaki Personel Sayısı").WithMultipleFilters()
            </div>
        </div>

        <script>

            window.GridMvc = window.GridMvc || {};
            window.GridMvc.lang = window.GridMvc.lang || {};
            GridMvc.lang.tr = {
                filterTypeLabel: "Filtre: ",
                filterValueLabel: "Değer:",
                applyFilterButtonText: "Uygula",
                filterSelectTypes: {
                    Equals: "Eşittir",
                    StartsWith: "Başlar",
                    Contains: "İçerir",
                    EndsWith: "Biter",
                    GreaterThan: "Büyüktür",
                    LessThan: "Küçüktür",

                },
                code: 'tr',
                boolTrueLabel: "Doğru",
                boolFalseLabel: "Yanlış",
                clearFilterLabel: "Temizle"
            };
        </script>
        <script type="text/javascript">
            $('.datepicker').datepicker({
                autoclose: true,
                todayHighlight: true,

            });
        </script>*@


            <div class="container">
                <div class="form-group">
                    <div class="input-group">
                        <input class="form-control" type="text" id="Search" placeholder="ARANACAK PERSONELİ GİRİNİZ">
                        <div class="input-group-append">
                            <div class="input-group-text"><i class="fa fa-search"></i></div>
                        </div>
                    </div>

                </div>
            </div>
            <hr />
            <script src="https://www.kryogenix.org/code/browser/sorttable/sorttable.js"></script>
            <div class="row">
                <div class="col-md-12">
                    <table class="table table-striped table-bordered table-sm sortable">
                        <thead>
                            <tr style="background-color:#d7c9c9; color: black">


                                <th style="color: black">
                                    <b>  PROJE ADI</b>
                                </th>
                                <th style="color: black">
                                    <b>PERSONEL</b>
                                </th>


                                <th style="color: black">
                                    <b>PERSONEL ÇIKIŞ TARİHİ</b>
                                </th>

                                <th style="color: black">
                                    <b> YER</b>
                                </th>
                                <th style="color: black">
                                    <b>DIŞ GÖREV ADI</b>
                                </th>
                                <th></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>

                        <tbody>

                            @{

                                foreach (var item in Model)
                                {




                                    <tr class="Search item">


                                        <td style="color: black">
                                            @Html.DisplayFor(modelItem => item.ARGE_Proje.ProjeAdi)
                                        </td>

                                        <td style="color: black" type="hidden">

                                            @Html.DisplayFor(modelItem => item.ARGE_Personel.AdSoyad)
                                        </td>


                                        <td style="color: black">
                                            @Html.DisplayFor(modelItem => item.CikisTarih)
                                        </td>
                                        <td style="color: black">
                                            @Html.DisplayFor(modelItem => item.Yer)
                                        </td>
                                        <td style="color: black">
                                            @Html.DisplayFor(modelItem => item.DisGorevAdi)
                                        </td>


                                        <td style="color: black">
                                            <center><a href="@Url.Action("Edit", "PersonelDisaridaGecirilenSure", new { id = item.ID })" title="DÜZENLE" class="btn btn-primary"> <i class="fas fa-pen">   </i></a></center>



                                        </td>
                                        <td style="color: black">
                                            @*@Html.ActionLink("DETAYLAR", "Details", new { id = item.ID }, new { @class = "btn btn-info" })*@
                                            <center> <a href="@Url.Action("Details", "PersonelDisaridaGecirilenSure",new { id = item.ID })" title="DETAYLAR" class="btn btn-info"> <i class="fa fa-book" aria-hidden="true">  </i></a></center>

                                        </td>

                                        <td style="color: black">
                                            <center><a href="@Url.Action("Delete", "PersonelDisaridaGecirilenSure", new { id = item.ID })" title="SİL" class="btn btn-danger">   <i class="fas fa-trash"> </i></a></center>


                                        </td>
                                    </tr>
                                }

                            }

                        </tbody>


                    </table>

                </div>
            </div>

            <script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js"></script>
            <script type="text/javascript">

                $(document).ready(function () {
                    function Contains(text_one, text_two) {
                        if (text_one.indexOf(text_two) != -1)
                            return true;
                    }
                    $("#Search").keyup(function () {
                        var searchText = $("#Search").val().toLowerCase();
                        $(".Search").each(function () {
                            if (!Contains($(this).text().toLowerCase(), searchText)) {
                                $(this).hide();
                            }
                            else {
                                $(this).show();
                            }
                        })
                    });
                });

            </script>
            <div class="pagination">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
            {
                DisplayLinkToIndividualPages = true,
                DisplayPageCountAndCurrentLocation = true,
                MaximumPageNumbersToDisplay = 5,
                //MaximumPageNumbersToDisplay = 3,
                //LiElementClasses = new string[] { "pagination" },
                //LinkToFirstPageFormat = "<< İLK",
                //LinkToPreviousPageFormat = "< GERİ",
                //LinkToNextPageFormat = "İLERİ >",
                //LinkToLastPageFormat = "SON >>",
                DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                DisplayLinkToLastPage = PagedListDisplayMode.Always,
                DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
                DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,

                DisplayEllipsesWhenNotShowingAllPageNumbers = false,
                EllipsesFormat = "&#8230;",
                LinkToFirstPageFormat = "««",
                LinkToPreviousPageFormat = "«",
                LinkToIndividualPageFormat = "{0}",
                LinkToNextPageFormat = "»",
                LinkToLastPageFormat = "»»",
                PageCountAndCurrentLocationFormat = "Sayfa {0}/{1}",
                //ItemSliceAndTotalFormat = "Showing items {0} through {1} of {2}.",
                FunctionToDisplayEachPageNumber = null,
                ClassToApplyToFirstListItemInPager = null,
                ClassToApplyToLastListItemInPager = null,
                ContainerDivClasses = new[] { "pagination" },
                //UlElementClasses = new[] { "pagination" },
                //LiElementClasses = Enumerable.Empty<string>(),

                //PageClasses = new string[] { "page-link" },

            }
            /* PagedListRenderOptions.PageNumbersOnly*/)
            </div>
            <style>
                .pagination a {
                    color: black;
                    float: left;
                    padding: 8px 16px;
                    text-decoration: none;
                    transition: background-color .3s;
                    border: 1px solid #ddd;
                }

                    .pagination a.active {
                        background-color: #4CAF50;
                        color: white;
                        border: 1px solid #4CAF50;
                    }

                    .pagination a:hover:not(.active) {
                        background-color: #ddd;
                    }
            </style>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
            <style>
                table {
                    margin: 0 auto;
                    margin-top: 20px;
                    width: 100%;
                    position: relative;
                    overflow: auto;
                    /*  overflow-y: overlay;*/
                }

                th,
                thead {
                    position: sticky;
                    top: 0;
                    border: 1px solid #dddddd;
                    /* background-color: #1f2d54;*/
                    text-align: center;
                    color: white;
                    table-layout: fixed;
                    word-break: break-word;
                    height: 45px;
                }

                .filter {
                    position: absolute;
                    width: 20vw;
                    height: 30vh;
                    display: none;
                    text-align: left;
                    font-size: small;
                    z-index: 9999;
                    overflow: auto;
                    background: #ffffff;
                    /*   color: #1f2d54;*/
                    border: 1px solid #dddddd;
                }

                    .filter input {
                        margin: 5px !important;
                        padding: 0 !important;
                        width: 10%;
                    }
            </style>
            <div id="loader" class="center"></div>

            <script>
                document.onreadystatechange = function () {
                    if (document.readyState !== "complete") {
                        document.querySelector(
                            "body").style.visibility = "hidden";
                        document.querySelector(
                            "#loader").style.visibility = "visible";
                    } else {
                        document.querySelector(
                            "#loader").style.display = "none";
                        document.querySelector(
                            "body").style.visibility = "visible";
                    }
                };
            </script>
            <style>
                #loader {
                    border: 12px solid #f3f3f3;
                    border-radius: 50%;
                    border-top: 12px solid #444444;
                    width: 70px;
                    height: 70px;
                    animation: spin 1s linear infinite;
                }

                @@keyframes spin {
                    100% {
                        transform: rotate(360deg);
                    }
                }

                .center {
                    position: absolute;
                    top: 0;
                    bottom: 0;
                    left: 0;
                    right: 0;
                    margin: auto;
                }
            </style>
        </div>
    </div>
</div>