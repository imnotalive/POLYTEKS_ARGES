@*@model IEnumerable<POLYTEKS_ARGE.Models.ARGE_ProjeDenemeleri>*@
@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<POLYTEKS_ARGE.Models.ARGE_ProjeDenemeleri>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (TempData["AlertMessage"] != null)
{
    <div class="alert alert-success">
        <strong>BAŞARILI!</strong> @TempData["AlertMessage"]
    </div>

}
@if (TempData["EditAlertMessage"] != null)
{
    <div class="alert alert-primary">
        <strong>BAŞARILI!</strong> @TempData["EditAlertMessage"]
    </div>

}
@if (TempData["DeleteAlertMessage"] != null)
{
    <div class="alert alert-danger">
        <strong>BAŞARILI!</strong> @TempData["DeleteAlertMessage"]
    </div>

}
<div class="col-md-12">
    <div class="card" style="background-color:whitesmoke">
        <div class="card-header">
            <center><h2 style="color: black"><b>AR-GE PROJE DENEMELERİ</b></h2></center>

            <p>
                @Html.ActionLink("YENİ PROJE DENEMESİ OLUŞTUR", "Home", "ProjeDenemeleri", new { @class = "btn btn-info btn-block" })
            </p>
            @using (Html.BeginForm("DenemeModeliOlustur", "ProjeDenemeleri", FormMethod.Post))
            {
                <input type="submit" value="RAPOR İNDİR" class="btn btn-danger btn-block" />
            }
            <br />
            <div class="container">
                <div class="form-group">
                    <div class="input-group">
                        <input class="form-control" type="text" id="Search" placeholder="ARA">
                        <div class="input-group-append">
                            <div class="input-group-text"><i class="fa fa-search"></i></div>
                        </div>
                    </div>

                </div>
            </div>
            <script src="https://www.kryogenix.org/code/browser/sorttable/sorttable.js"></script>
            <table class="table table-striped table-bordered table-sm sortable" id="myTable">
                <tr>
                    <th style="color: black">
                        <b> @Html.DisplayName("POY DENEME TARİHİ")</b>
                    </th>
                    <th style="color: black">
                        <b>@Html.DisplayName("DENEME ADI")</b>
                    </th>
                    <th style="color: black">
                        <b>@Html.DisplayName("PROJE KODU")</b>
                    </th>
                    <th style="color: black">
                        <b>  @Html.DisplayName("PROJE ADI")</b>
                    </th>
                    <th style="color: black">
                        <b>   @Html.DisplayName("POY/FDY LOTU")</b>
                    </th>
                    <th style="color: black">
                        <b> @Html.DisplayName("TEKSTÜRE LOTU")</b>
                    </th>
                    <th style="color: black">
                        <b> @Html.DisplayName("BÜKÜM LOTU")</b>
                    </th>

                    <th style="color: black">
                        <b> @Html.DisplayName("HAVA TEKSTÜRE LOTU")</b>
                    </th>

                </tr>

                @foreach (var item in Model)
                {
                    <tr class="Search item">
                        <td style="color: black">
                            @Html.DisplayFor(modelItem => item.DenemeTarih)
                        </td>
                        <td style="color: black">
                            <b> @Html.DisplayFor(modelItem => item.DenemeAdi)</b>
                        </td>
                        <td style="color: black">
                            <b> @Html.DisplayFor(modelItem => item.ARGE_Proje.ProjeKodu)</b>
                        </td>
                        <td style="color: black">
                            <b> @Html.DisplayFor(modelItem => item.ARGE_Proje.ProjeAdi)</b>
                        </td>
                        <td style="color: black">
                            @Html.DisplayFor(modelItem => item.POYLotu)
                        </td>
                        <td style="color: black">
                            @Html.DisplayFor(modelItem => item.TekstureLotu)
                        </td>
                        <td style="color: black">
                            @Html.DisplayFor(modelItem => item.BukumLotu)
                        </td>
                        <td style="color: black">
                            @Html.DisplayFor(modelItem => item.HavaTekstureLotu)
                        </td>


                        <td style="color: black">

                            <center>
                                <a href="@Url.Action("Edit", "ProjeDenemeleri",new { id = item.ID })" title="DÜZENLE" class="btn btn-primary"> <i class="fas fa-pen">   </i></a>
                            </center>
                        </td>


                        <td style="color: black">
                            <center>
                                @*@Html.ActionLink("DETAYLAR", "Details", new { id = item.ID }, new { @class = "btn btn-info" })*@
                                <a href="@Url.Action("Details", "ProjeDenemeleri",new { id = item.ID })" title="DETAYLAR" class="btn btn-info"> <i class="fa fa-book" aria-hidden="true">  </i></a>
                            </center>
                        </td>
                        <td style="color: black">
                            <center>
                                @*@Html.ActionLink("SİL", "Delete", new { id = item.ID }, new { @class = "btn btn-danger" })*@
                                <a href="@Url.Action("Delete", "ProjeDenemeleri",new { id = item.ID })" title="SİL" class="btn btn-danger">   <i class="fas fa-trash"> </i></a>
                            </center>
                        </td>
                    </tr>
                }

            </table>
            <div style="color:black" class="b">
                <b>
                    <strong>&nbsp;F-32.09A/01</strong>


                </b>
            </div>
        </div>
    </div>
</div>
<style>

    div.b {
        text-align: left;
        font-style: italic;
    }
</style>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js"></script>
<script type="text/javascript">

    $(document).ready(function () {
        function Contains(text_one, text_two) {
            if (text_one.indexOf(text_two) != -1)
                return true;
        }
        $("#Search").keyup(function () {
            var searchText = $("#Search").val().toLowerCase();
            $(".Search").each(function () {
                if (!Contains($(this).text().toLowerCase(), searchText)) {
                    $(this).hide();
                }
                else {
                    $(this).show();
                }
            })
        });
    });

</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<style>
    table {
        margin: 0 auto;
        margin-top: 20px;
        width: 100%;
        position: relative;
        overflow: auto;
        /*  overflow-y: overlay;*/
    }

    th,
    thead {
        position: sticky;
        top: 0;
        border: 1px solid #dddddd;
        /* background-color: #1f2d54;*/
        text-align: center;
        color: white;
        table-layout: fixed;
        word-break: break-word;
        height: 45px;
    }

    .filter {
        position: absolute;
        width: 20vw;
        height: 30vh;
        display: none;
        text-align: left;
        font-size: small;
        z-index: 9999;
        overflow: auto;
        background: #ffffff;
        /*   color: #1f2d54;*/
        border: 1px solid #dddddd;
    }

        .filter input {
            margin: 5px !important;
            padding: 0 !important;
            width: 10%;
        }
</style>
<script>
    (function ($) {

        $.fn.ddTableFilter = function (options) {
            options = $.extend(true, $.fn.ddTableFilter.defaultOptions, options);

            return this.each(function () {
                if ($(this).hasClass('ddtf-processed')) {
                    refreshFilters(this);
                    return;
                }
                var table = $(this);
                var start = new Date();

                $('th:visible', table).each(function (index) {
                    if ($(this).hasClass('skip-filter')) return;
                    var selectbox = $('<select class="form-control">');
                    var values = [];
                    var opts = [];
                    selectbox.append('<option value="--all--">' + $(this).text() + '</option>');

                    var col = $('tr:not(.skip-filter) td:nth-child(' + (index + 1) + ')', table).each(function () {
                        var cellVal = options.valueCallback.apply(this);
                        if (cellVal.length == 0) {
                            cellVal = '--empty--';
                        }
                        $(this).attr('ddtf-value', cellVal);

                        if ($.inArray(cellVal, values) === -1) {
                            var cellText = options.textCallback.apply(this);
                            if (cellText.length == 0) { cellText = options.emptyText; }
                            values.push(cellVal);
                            opts.push({ val: cellVal, text: cellText });
                        }
                    });
                    if (opts.length < options.minOptions) {
                        return;
                    }
                    if (options.sortOpt) {
                        opts.sort(options.sortOptCallback);
                    }
                    $.each(opts, function () {
                        $(selectbox).append('<option value="' + this.val + '">' + this.text + '</option>')
                    });

                    $(this).wrapInner('<div style="display:none">');
                    $(this).append(selectbox);

                    selectbox.bind('change', { column: col }, function (event) {
                        var changeStart = new Date();
                        var value = $(this).val();

                        event.data.column.each(function () {
                            if ($(this).attr('ddtf-value') === value || value == '--all--') {
                                $(this).removeClass('ddtf-filtered');
                            }
                            else {
                                $(this).addClass('ddtf-filtered');
                            }
                        });
                        var changeStop = new Date();
                        if (options.debug) {
                            console.log('Search: ' + (changeStop.getTime() - changeStart.getTime()) + 'ms');
                        }
                        refreshFilters(table);

                    });
                    table.addClass('ddtf-processed');
                    if ($.isFunction(options.afterBuild)) {
                        options.afterBuild.apply(table);
                    }
                });

                function refreshFilters(table) {
                    var refreshStart = new Date();
                    $('tr', table).each(function () {
                        var row = $(this);
                        if ($('td.ddtf-filtered', row).length > 0) {
                            options.transition.hide.apply(row, options.transition.options);
                        }
                        else {
                            options.transition.show.apply(row, options.transition.options);
                        }
                    });

                    if ($.isFunction(options.afterFilter)) {
                        options.afterFilter.apply(table);
                    }

                    if (options.debug) {
                        var refreshEnd = new Date();
                        console.log('Refresh: ' + (refreshEnd.getTime() - refreshStart.getTime()) + 'ms');
                    }
                }

                if (options.debug) {
                    var stop = new Date();
                    console.log('Build: ' + (stop.getTime() - start.getTime()) + 'ms');
                }
            });
        };

        $.fn.ddTableFilter.defaultOptions = {
            valueCallback: function () {
                return encodeURIComponent($.trim($(this).text()));
            },
            textCallback: function () {
                return $.trim($(this).text());
            },
            sortOptCallback: function (a, b) {
                return a.text.toLowerCase() > b.text.toLowerCase();
            },
            afterFilter: null,
            afterBuild: null,
            transition: {
                hide: $.fn.hide,
                show: $.fn.show,
                options: []
            },
            emptyText: '--BOŞ--',
            sortOpt: true,
            debug: false,
            minOptions: 2
        }

    })(jQuery);

    $('table').ddTableFilter();
</script>
<div id="loader" class="center"></div>

<script>
    document.onreadystatechange = function () {
        if (document.readyState !== "complete") {
            document.querySelector(
                "body").style.visibility = "hidden";
            document.querySelector(
                "#loader").style.visibility = "visible";
        } else {
            document.querySelector(
                "#loader").style.display = "none";
            document.querySelector(
                "body").style.visibility = "visible";
        }
    };
</script>
<style>
    #loader {
        border: 12px solid #f3f3f3;
        border-radius: 50%;
        border-top: 12px solid #444444;
        width: 70px;
        height: 70px;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        100% {
            transform: rotate(360deg);
        }
    }

    .center {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        margin: auto;
    }
</style>

